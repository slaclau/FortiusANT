name: "Build debian packages"

on: 
  push:
    branches:
      - "**"
    tags-ignore:
      - "*"
  workflow_call:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]
        
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Add dh-virtualenv repository if needed
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo add-apt-repository ppa:jyrki-pulliainen/dh-virtualenv
          sudo apt update
      - name: Install build dependencies
        run: |
          sudo apt install debhelper dh-virtualenv
      - name: Check system python version
        run: |
          echo "useSystemPython=$(python3 useSystemPython.py)" >> $GITHUB_ENV
          echo "${{env.useSystemPython}}"
      - name: Install system python packages
        if: ${{ env.useSystemPython == 'yes' }}
        run: |
          sudo apt install python3 python3-dev python3-distutils python3-venv
          python3 wxPython-source.py
          python3 updateChangelog.py
          python3 setup.py bdist_wheel --dist-dir=pip_local
          python3 -m pip download \
          --destination-directory pip_local \
          -r requirements.txt
      - name: Install python3.9 packages
        if: ${{ env.useSystemPython != 'yes' }}
        run: |
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt update
          sudo apt install python3.9 python3.9-dev python3.9-distutils python3.9-venv
          python3.9 wxPython-source.py
          python3.9 updateChangelog.py
          python3.9 setup.py bdist_wheel --dist-dir=pip_local
          python3.9 -m pip download \
          --destination-directory pip_local \
          -r requirements.txt
      - name: Install needed libraries
        run: |
          sudo apt install libgstreamer-plugins-base1.0-0 libnotify4 libsdl2-2.0-0 libwebkit2gtk-4.0-dev libjavascriptcoregtk-4.0-dev libegl-dev

      - name: Build and sign source and binary
        run: |
          GPG_KEY_ID=$(echo "${{ secrets.PPA_GPG_PRIVATE_KEY }}" | gpg --import-options show-only --import | sed -n '2s/^\s*//p')
          echo $GPG_KEY_ID
          echo "${{ secrets.PPA_GPG_PRIVATE_KEY }}" | gpg --batch --import
          sed -i '1d' requirements.txt
          dpkg-buildpackage -S -sa --compression=xz --compression-level=1
          dpkg-buildpackage -b
          mv ../fortius-ant_*.* .
      - name: Install package
        run: |
          sudo apt install ./fortius-ant*.deb
      - name: Test package
        run: |
          fortius-ant --version
          explorant --version
      - name: Upload debian package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: |
            fortius-ant*.deb
            fortius-ant*.dsc
            fortius-ant*.tar.xz
            fortius-ant*.changes
      - name: Publish focal package
        run: |
          sudo apt install dput
          dput ppa:slaclau/ppa-pre fortius-ant*source.changes
        if: matrix.os == 'ubuntu-20.04'
      - name: Publish jammy package
        run: |
          sudo apt install dput
          dput ppa:slaclau/ppa-pre fortius-ant*source.changes
        if: matrix.os == 'ubuntu-22.04'
